@typeparam TRowData
@using System.Linq.Expressions
@using Humanizer
<CascadingValue Value="this">@ChildContent</CascadingValue>


@*@if (IsHeader)
    {
        var title = Title;
        @if (string.IsNullOrEmpty(title) && Expression != null)
        {
            title = GetMemberName(Expression).Humanize();
        }
        <div class="attribute__container">
            <div class="attribute">@title</div>
        </div>
    }
    else
    {
        var title = Title;
        @if (string.IsNullOrEmpty(title) && Expression != null)
        {
            title = GetMemberName(Expression).Humanize();
        }
        <div class="attribute__container">

            <div class="attribute" data-name=@title>@compiledExpression</div>
        </div>
    }*@
@code {
    [CascadingParameter]
    public YLGrid<TRowData> OwnerGrid { get; set; }
    [Parameter] public RenderFragment ChildContent { get; set; }
    private List<YLGridColumn<TRowData>> Columns { get; set; } = new List<YLGridColumn<TRowData>>();
    RenderFragment groupHeaderTemplete;
    RenderFragment<TRowData> groupCellTemplate;

    protected override void OnParametersSet()
    {
        groupCellTemplate = item => @:@{
            <div class="attribute__container">
                @foreach (YLGridColumn<TRowData> column in Columns)
                {
                    @column.HeaderTemplate
                }

            </div>
            }
;
            }
            internal RenderFragment<TRowData> GroupCellTemplate
            {
                get
                {
                    return groupCellTemplate;

                }
            }


            internal RenderFragment GroupHeaderTemplate
            {
                get
                {

                    return groupHeaderTemplete = @:@{
                <div class="attribute__container">
                    @foreach (YLGridColumn<TRowData> column in Columns)
                    {
                        @column.HeaderTemplate
                    }
                </div>
                }
                   ;
             }
         }
        protected override void OnInitialized()
        {
            OwnerGrid.AddGroup(this);

        }

        public void AddColumn(YLGridColumn<TRowData> column)
        {
            Columns.Add(column);
        }
}
