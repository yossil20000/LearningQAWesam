@page "/fetchdata"
@using LearningQA.Shared


<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (fetchDataViewModel == null || fetchDataViewModel.WeatherForecast == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table bg-color-9">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in fetchDataViewModel.WeatherForecast)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
    <LearningQA.Client.Components.Grid Items="fetchDataViewModel.WeatherForecast" Caption="TemperatureTable" class="table-bordered" RowClass='(row,index) => row.TemperatureF > 34 ? "table-info  bg-color-9" : ""'>
        <LearningQA.Client.Components.GridColumn TRowData="IWeatherForecast" Expression="c => c.Date" Format="d" />
        <LearningQA.Client.Components.GridColumn TRowData="IWeatherForecast" Expression="c => c.TemperatureC" />
        <LearningQA.Client.Components.GridColumn TRowData="IWeatherForecast" Title="Temp(F)">@context.TemperatureF F</LearningQA.Client.Components.GridColumn>
        <LearningQA.Client.Components.GridColumn TRowData="IWeatherForecast"  Expression="c => c.Summary" />
    </LearningQA.Client.Components.Grid>
}



@code {


}
