@page "/testitem"
@inject LearningQA.Client.ViewModel.TestItemViewModelPersist TestItemViewModelPersist


<div class="bg-color-6 color-6">
    <div class="test-item__container bg-color-7 color-2">
        <header class="test-item__container_header current__theme-bg-image--5-9"><div>Header</div></header>
        <div class="test-item__container_aside-header current__theme-bg-image">
            <div>Questions</div>
        </div>
        @if (false)
        {
            <div class="test-item__container_selection ">




                <select class="ss2 bg-color-6 color-2">
                    <option value="A">2 aaaaaaaaaaaaaaaaaaaaaaaa</option>
                </select>
                <select class="ss3 bg-color-6 color-2">
                    <option value="A">3 aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa</option>
                </select>
                <button class="ss4 bg-color-6 color-2">Load</button>
            </div>
        }
        else if (IsInitialize)
        {
            <EditForm class="test-item__container_selection" Model="TestItemViewModelPersist">
                <LearningQA.Client.Components.TestItemSelects TestItemViewModelPersist="TestItemViewModelPersist" OnLoadCommand="testItemViewModel.OnLoadCommand">

                </LearningQA.Client.Components.TestItemSelects>

            </EditForm>

        }
        else
        {
            <div>
                Inititalzed In Process
            </div>
        }
        @if (testItemViewModel.TestItem != null && TestItemViewModelPersist.TestItem != null && TestItemViewModelPersist.SelectedQuestion != null && TestItemViewModelPersist.SelectedQuestion.Options != null)
        {

            <div class="test-item__container_question bg-color-8 color-2">
                @if (TestItemViewModelPersist.SelectedQuestion != null)
                {
                    <p>@TestItemViewModelPersist.SelectedQuestion.Question</p>
                }
            </div>
            <div class="test-item__container_option bg-color-9 color-2">
                <ul>

                    @foreach (var i in TestItemViewModelPersist.SelectedQuestion.Options)
                    {
                        <li>
                            <div class="form-check form-switch ">
                                <input class="form-check-input bg-color-2" type="checkbox" id="question-option-2" @onchange="EventArgs => { OnOptionChanged(i, EventArgs.Value); }">
                            </div>
                            <p>@i.Content</p>
                        </li>
                    }

                </ul>
            </div>
            <div class="test-item__container_nav">
                <button class=@($"nav-1 bg-color-7 color-2 {(TestItemViewModelPersist.EnablePreviouse ? "" : "disabled")}") @onclick="TestItemViewModelPersist.OnPrevious">Previous</button>
                <div class="nav-2">Q</div>
                <input type="number" max=@(TestItemViewModelPersist.TestItem.Questions.Count -1) min="0" class="nav-3 bg-color-7 color-2" value=@(TestItemViewModelPersist.CurrentQuestion) @onchange="ChangeEventArgs => { TestItemViewModelPersist.OnChangeQuestionNumber(ChangeEventArgs); }" >
                <!-- <div class="nav-4"></div> -->
                <button class=@($"nav-5 bg-color-7 color-2 {(TestItemViewModelPersist.EnableNext ? "" : "disabled")}" ) @onclick="TestItemViewModelPersist.OnNext">Next</button>
                <!-- <div style="width: 2px;"></div> -->
                <button class=" bg-color-7 color-2 nav-7">Finish</button>
            </div>
        }

        <div class="test-item__container_aside-summary bg-color-6 color-2">
            <div>Ansered</div>
            <div class="color-3">566</div>
            <div>Remained</div>
            <div>123</div>
            <div>marked</div>
            <div>12</div>
        </div>


        <div class="test-item__container_answer-expend bg-color-7 color-2">

            <div id="show-answer" class="toggle"></div>
            <div>Show / Hide</div>
        </div>
        <div class="test-item__container_answer">
            <p class="visually-hidden" id="answer">Lorem, ipsum dolor sit amet consectetur adipisicing elit. Ea, tempore!</p>
        </div>
        <div class="test-item__container_supplement bg-color-9 color-2">
            <div id="container_supplement" class="toggle">

            </div>
            <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Ipsum dolore nostrum laboriosam quo maxime, repellat possimus commodi vitae ratione dignissimos reprehenderit accusantium harum cumque maiores dolorem ut placeat accusamus ab sint. Modi consequatur natus dolores, ratione harum saepe a eos! Eaque eum, accusamus ipsum odio molestias ea maiores quis pariatur.</p>
            <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. A reiciendis modi nobis quae blanditiis commodi rem dicta, laudantium ab quaerat est illo accusamus assumenda sunt delectus, in porro nisi doloremque voluptates voluptatum animi! Provident eligendi nulla quae placeat dolorum voluptates, tenetur doloribus illum possimus ratione enim porro obcaecati ipsum. Accusantium assumenda sunt veritatis, blanditiis laborum consequatur alias optio, iure debitis sequi possimus atque dolor culpa voluptatum eum quae quas quibusdam totam beatae in? Ea ut fugit similique rerum, sint ab nisi, doloribus molestias vero animi hic, maxime provident odit! Ut, praesentium. Molestiae, illo rerum. Reiciendis doloribus voluptatem quaerat maxime vero.</p>
        </div>
        <div class="test-item__container_aside-header current__theme-bg-image">
            <h6>Questions</h6>
        </div>

        <aside class="test-item__container_aside bg-color-5 color-2">

            <input type="button" class="c123" id="aaa">
            <div class="question-list color-5 bg-color-2">
                <ul>
                    <li class="question-list_item1">
                        <div class="legend-icon_answered"></div>
                        <div>Q1</div>
                        <input type="checkbox" title="Remove From Current Test" />
                    </li>
                    <li class="question-list_item2">
                        <div class="legend-icon_answered"></div>
                        <div>Q1</div>
                        <input type="checkbox" title="Remove From Current Test" />
                    </li>
                </ul>
            </div>

        </aside>`

        <div class="test-item__container_aside-legend">
            <div class="legend-icon_answered"></div>
            <div>Answered</div>
            <div class="legend-icon_wrong"></div>
            <div>Wrong</div>
            <div class="legend-icon_marked"></div>
            <div>Marked</div>
        </div>
        @*<footer class="test-item__container_footer">Footer</footer>*@
    </div>
</div>

@code {
    private void OnOptionChanged(QuestionOption<int> id, object checkedValue)
    {
        Console.WriteLine($"Option id{id.Id } status: {(bool)checkedValue} ");
    }
    @*@onchange="ChangeEventArgs => { TestItemViewModelPersist.OnChangeQuestionNumber(ChangeEventArgs.Value.ToString()); }"*@
}
